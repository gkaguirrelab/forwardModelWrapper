{
	"name": "forwardmodel",
	"label": "forwardModel: derive retinotopic map using non-linear pRF fitting",
	"description": "Built from a MATLAB wrapper written for Kendrick Kay's AnalyzePRF script, this gear performs pRF analysis and allows ICA-fix zip archives to be used as direct inputs. The gear looks for the cifti files in each of the separate run folders located in the ica-fix archive and outputs an results.mat file along with raw brain maps and diagnostic images.",
	"version": "0.3.0",
	"inputs": {
		"funcZipPath01": {
			"base": "file",
			"description": "Provides the path to a zip archive that has been produced by either hcp-icafix or hcp-func.",
			"optional": false,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"funcZipPath02": {
			"base": "file",
			"description": "Provides the path to a zip archive that has been produced by either hcp-icafix or hcp-func.",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"funcZipPath03": {
			"base": "file",
			"description": "Provides the path to a zip archive that has been produced by either hcp-icafix or hcp-func.",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"funcZipPath04": {
			"base": "file",
			"description": "Provides the path to a zip archive that has been produced by either hcp-icafix or hcp-func.",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"funcZipPath05": {
			"base": "file",
			"description": "Provides the path to a zip archive that has been produced by either hcp-icafix or hcp-func.",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"maskFilePath": {
			"base": "file",
			"description": "Use a nifti FSLR mask to specify which voxels to analyze. If empty, analyze the whole brain. Using a mask significantly decreases the analysis time depending on the region. Has to be a surface cifti mask",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"payloadFilePath": {
			"base": "file",
			"description": "DESCRIBE",
			"optional": true,
			"type": {
				"enum": [
					"MATLAB data"
				]
			}
		},
		"stimFilePath": {
			"base": "file",
			"description": "Full path to a .mat file that contains the stimulus apertures, which is a cell vector of R x C x time. Values should be in [0,1]. The number of time points can differ across runs. The cell vector should either be of length n, where n is the number of acquisitions that are present in the input data zip file, or length 1, in which case the cell vector is assumed to apply to every acquisition.",
			"optional": false,
			"type": {
				"enum": [
					"MATLAB data"
				]
			}
		},
		"structZipPath": {
			"base": "file",
			"description": "Inputting HCP-struct zip archive generates extra mgz maps in subject's native space. Resulting output file is required by the Bayesian Analysis gear",
			"optional": false,
			"type": {
				"enum": [
					"archive"
				]
			}
		}
	},
	"config": {
		"RegName": {
			"default": "FS",
			"description": "Registration type used for creating your hcp-struct archive. FS or MSMSulc. Default:FS",
			"type": "string"
		},
		"averageAcquisitions": {
			"default": "0",
			"description": "If used, averages the runs in the icafix directory before the pRF analysis. 1 for true and 0 for false. Default = 0 (false)",
			"type": "string"
		},
		"dataFileType": {
			"default": "cifti",
			"description": "Select the data type. Currently, only cifti surface files can be received from the ica-fix output",
			"type": "string"
		},
		"dataSourceType": {
			"default": "icafix",
			"description": "Input archive type. Currently, only icafix archives are supported",
			"type": "string"
		},
		"modelClass": {
			"default": "pRF_timeShift",
			"description": "DESCRIBE",
			"type": "string"
		},
		"modelOpts": {
			"default": "{(pixelsPerDegree), 5.18, (screenMagnification), 1, (polyDeg), [], (typicalGain), 300}",
			"description": "DESCRIBE",
			"type": "string"
		},
		"tr": {
			"description": "Required. TR in seconds (e.g. 1.5).",
			"type": "string"
		},
		"trimDummyStimTRs": {
			"default": "0",
			"description": "Used when the stimulus and data lengths are not equal and the inequality is due to the removal of dummy TRs from the sample. Calculates the mean along the time dimension for each voxel and adds that mean to the front of the data matrix. This procedure is repeated multiple times if required until data and stimulus sample lengths are exactly the same. If this option is set to zero, and the stimulus.mat file and the data have different numbers of timepoints, then the stimulus will be assumed to be of the same duration as the data so needs be resampled beforehand to match in temporal resolution. 1 for true and 0 for false. Default = 0 (false)",
			"type": "string"
		}
	},
	"author": "Ozenc Taskin",
	"maintainer": "Ozenc Taskin",
	"license": "Other",
	"source": "https://github.com/gkaguirrelab/forwardModelWrapper",
	"url": "https://github.com/gkaguirrelab/pRFCompileWrapper",
	"custom": {
		"flywheel": {
			"suite": "GKAguirreLab"
		},
		"gear-builder": {
			"category": "analysis",
			"image": "gkaguirrelab/analyzeprfgear:0.3.0"
		}
	}
}
